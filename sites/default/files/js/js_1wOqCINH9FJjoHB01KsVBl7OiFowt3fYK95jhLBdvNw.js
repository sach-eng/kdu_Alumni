/* @license GPL-2.0-or-later https://www.drupal.org/licensing/faq */
(function($,Drupal,once,drupalSettings){'use strict';if(typeof drupalSettings.cvJqueryValidateOptions==='undefined')drupalSettings.cvJqueryValidateOptions={};if(drupalSettings.clientside_validation_jquery.force_validate_on_blur)drupalSettings.cvJqueryValidateOptions.onfocusout=function(element){this.element(element);};$.extend($.validator.messages,drupalSettings.clientside_validation_jquery.messages);var _urlValidation=$.validator.methods.url;$.validator.methods.url=function(value,element){return _urlValidation.call(this,value,element)||/^(public|private):\/\//.test(value);};Drupal.behaviors.cvJqueryValidate={attach:function(context){if(typeof Drupal.Ajax!=='undefined')if(typeof Drupal.Ajax.prototype.beforeSubmitCVOriginal==='undefined'){var validateAll=2;try{validateAll=drupalSettings.clientside_validation_jquery.validate_all_ajax_forms;}catch(e){}Drupal.Ajax.prototype.beforeSubmitCVOriginal=Drupal.Ajax.prototype.beforeSubmit;Drupal.Ajax.prototype.beforeSubmit=function(form_values,element_settings,options){if(typeof this.$form!=='undefined'&&(validateAll===1||$(this.element).hasClass('cv-validate-before-ajax'))&&$(this.element).attr("formnovalidate")==undefined){$(this.$form).removeClass('ajax-submit-prevented');$(this.$form).validate();if(!($(this.$form).valid())){this.ajaxing=false;$(this.$form).addClass('ajax-submit-prevented');return false;}}return this.beforeSubmitCVOriginal.apply(this,arguments);};}$(document).trigger('cv-jquery-validate-options-update',drupalSettings.cvJqueryValidateOptions);once('cvJqueryValidate','body form').forEach(function(element){$(element).validate(drupalSettings.cvJqueryValidateOptions);});}};})(jQuery,Drupal,once,drupalSettings);;
(function($,Drupal,debounce,CKEDITOR){Drupal.behaviors.cvJqueryValidateCKEditor={attach:function(context){if(typeof CKEDITOR==='undefined')return;var ignore=':hidden';var not=[];for(var instance in CKEDITOR.instances)if(CKEDITOR.instances.hasOwnProperty(instance))not.push('#'+instance);ignore+=not.length?':not('+not.join(', ')+')':'';$('form').each(function(){var validator=$(this).data('validator');if(!validator)return;validator.settings.ignore=ignore;validator.settings.errorPlacement=function(place,$element){var id=$element.attr('id');var afterElement=$element[0];if(CKEDITOR.instances.hasOwnProperty(id))afterElement=CKEDITOR.instances[id].container.$;place.insertAfter(afterElement);};});var updateText=function(instance){return debounce(function(e){instance.updateElement();var event=$.extend(true,{},e.data.$);delete event.target;delete event.explicitOriginalTarget;delete event.originalTarget;delete event.currentTarget;$(instance.element.$).trigger(new $.Event(e.name,event));},250);};CKEDITOR.on('instanceReady',function(){for(var instance in CKEDITOR.instances)if(CKEDITOR.instances.hasOwnProperty(instance)){CKEDITOR.instances[instance].document.on("keyup",updateText(CKEDITOR.instances[instance]));CKEDITOR.instances[instance].document.on("paste",updateText(CKEDITOR.instances[instance]));CKEDITOR.instances[instance].document.on("keypress",updateText(CKEDITOR.instances[instance]));CKEDITOR.instances[instance].document.on("blur",updateText(CKEDITOR.instances[instance]));CKEDITOR.instances[instance].document.on("change",updateText(CKEDITOR.instances[instance]));}});}};})(jQuery,Drupal,Drupal.debounce,(typeof CKEDITOR==='undefined')?undefined:CKEDITOR);;
(function($,Drupal,once){'use strict';Drupal.behaviors.webformCheckboxesAllorNone={attach:function(context){$(once('webform-checkboxes-all-or-none','[data-options-all], [data-options-none]',context)).each(function(){var $element=$(this);var options_all_value=$element.data('options-all');var options_none_value=$element.data('options-none');var $checkboxes=$element.find('input[type="checkbox"]');var $options=$checkboxes.not('[value="'+options_all_value+'"]').not('[value="'+options_none_value+'"]');var $options_all=$element.find(':checkbox[value="'+options_all_value+'"]');var $options_none=$element.find(':checkbox[value="'+options_none_value+'"]');if($options_all.length){$options_all.on('click',toggleCheckAllEventHandler);if($options_all.prop('checked'))toggleCheckAllEventHandler();}if($options_none.length){$options_none.on('click',toggleCheckNoneEventHandler);toggleCheckNoneEventHandler();}$options.on('click',toggleCheckboxesEventHandler);toggleCheckboxesEventHandler();function toggleCheckAllEventHandler(){if($options_all.prop('checked')){if($options_none.is(':checked'))$options_none.prop('checked',false).trigger('change',['webform.states']);$options.not(':checked').prop('checked',true).trigger('change',['webform.states']);}else $options.filter(':checked').prop('checked',false).trigger('change',['webform.states']);}function toggleCheckNoneEventHandler(){if($options_none.prop('checked'))$checkboxes.not('[value="'+options_none_value+'"]').filter(':checked').prop('checked',false).trigger('change',['webform.states']);}function toggleCheckboxesEventHandler(){var isAllChecked=($options.filter(':checked').length===$options.length);if($options_all.length&&$options_all.prop('checked')!==isAllChecked)$options_all.prop('checked',isAllChecked).trigger('change',['webform.states']);var isOneChecked=$options.is(':checked');if($options_none.length&&isOneChecked)$options_none.prop('checked',false).trigger('change',['webform.states']);}});}};})(jQuery,Drupal,once);;
(function($,Drupal){'use strict';Drupal.behaviors.webformOptionsButtons={attach:function(context){$(context).find('label.webform-options-display-buttons-label > input[type="checkbox"], label.webform-options-display-buttons-label > input[type="radio"]').each(function(){var $input=$(this);var $label=$input.parent();$input.detach().insertBefore($label);});}};})(jQuery,Drupal);;
(function($,Drupal,once){'use strict';Drupal.behaviors.webformSelectOptionsDisabled={attach:function(context){$(once('webform-select-options-disabled','select[data-webform-select-options-disabled]',context)).each(function(){var $select=$(this);var disabled=$select.attr('data-webform-select-options-disabled').split(/\s*,\s*/);$select.find('option').filter(function isDisabled(){return ($.inArray(this.value,disabled)!==-1);}).attr('disabled','disabled');});}};})(jQuery,Drupal,once);;
